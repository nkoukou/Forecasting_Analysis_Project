plot(data)
data=create_timeseries(19)
plot(data)
fit = tslm(data~trend+season)
lines(fitted(fit),col=2)
fcast = forecast(fit)
plot(fcast)
fcast = forecast(fit,52)
plot(fcast)
fit
fcast = forecast(fit,10)
plot(fcast)
fcast = forecast(fit)
plot(fcast)
fcast = forecast(fit,h=52)
plot(fcast)
CV(fit)
help(par)
residuals(fit)
plot(fitted(fit),residuals(fit))
plot(fitted(fit),residuals(fit), xy.lines=FALSE,xy.labels=FALSE)
par(mfrow=c(1,2))
plot(residuals(fit))
Acf(residuals(fit))
hist(residuals(fit))
fancy
plot(fancy)
plot(fancy)
par(mfrow=c(1,1))
plot(fancy)
data <- ts(fancy, start=1987, frequency=12)
plot(data)
fancy[1]
fancy[2]
fancylog = data.frame(log.fancy=log(fancy))
fancylog
plot(fancylog)
log(fancy[82])
fancylog2=log(fancy)
fancylog2
fancy[82]
fancylog2[82]
typeof(fancylog)
typeof(fancylog2)
help(data0)
help(data)
character(1,2)
character("1","2")
character(1)
character(232)
integer(2)
integer
help(step)
fit = tslm(fancylog2~trend+season
)
summary(fit)
plot(fancylog)
lines(fitted(fit))
lines(fitted(fit),col=2)
plot(fancy)
fit2=tslm(fancy~trend+season)
summary(fit2)
lines(fitted(fit2))
lines(fitted(fit2),col=2)
res=residuals(fit)
plot(res)
plot(fit, res)
plot(fitted(fit), res)
plot(fitted(fit), res,xy.lines=FALSE,xy.labels=false)
plot(fitted(fit), res,xy.lines=FALSE,xy.labels=False)
plot(fitted(fit), res,xy.lines=FALSE,xy.labels=FALSE)
help(boxplot)
boxplot(res)
boxplot(residuals(fit2))
summary(fit)
divisions2[4]
divisions_titles[4]
source('plots.R')
divisions_titles[4]
division_titles[4]
division_titles[5]
division_titles[6]
Acf(res)
dwtest(fit, alt="two.sided")
bgtest(fit,5)
fcast = forecast(fit, newdata=data.frame(c(1994,1995,1996)))
plot(fcast)
fcast = forecast(fit, h=36)
plot(fcast)
fcast
dwtest(fit, alt="two.sided")
exp(fit)
log(fit)
fit
exp(fancylog2)
fancy
fit
fitted(fit)
exp(fitted(fit)
)
fancy
help("data.frame")
test1.row.names
test1.names
data
typeof(data)
typeof(data.frame(data)
)
data.frame(data)
source('predictors.R')
forecast_division(division_titles[3])
current_data
source('predictors.R')
x=forecast_division(division_titles[3])
x
data.frame(x)
division_titles[3]
division_titles
divisions[-1:-3]
divisions[-1:-2]
source('predictors.R')
division_titles
divisions[-1:-2][1]
divisions[-1:-2][2]
source('predictors.R')
x=forecast_division(division_titles[3])
x
test=test1
test[2,3]
test[15,5]
source('predictors.R')
x=forecast_division(division_titles[3])
x
source('predictors.R')
x
x=forecast_division(division_titles[3])
x
source('predictors.R')
x=forecast_division(division_titles[3])
x
help(fit)
help(tslm)
data
fi
fit
summary(fit)
f=summary(fi)
f=summary(fit)
f
source('predictors.R')
forecast_division(division_titles[1])
source('predictors.R')
forecast_division(division_titles[1])
source('predictors.R')
forecast_division(division_titles[1])
plot_division_timeseries(division_titles[1])
source('predictors.R')
forecast_division(division_titles[1])
source('predictors.R')
forecast_division(division_titles[1])
dwtest(forecast_division()[3])
x=forecast_division(division_titles[1])
dwtest(x)
dwtest(x[3])
source('predictors.R')
x=forecast_division(division_titles[1])
x[1]
x[2]
x[3]
typeof(x[3])
dwtest(as.double(x[3]))
dwtest(data.matrix(x[3]))
data.matrix(x[3])
x
typeof(x)
typeof(x[1])
typeof(as.char(x[1])
)
typeof(as.character(x[1]))
as.character(x[1])
as.integer(x[3])
as.double(x[3])
fitted(fit)
typeof(fitted(fit))
fitted(fit)+1
source('predictors.R')
x=forecast_division(division_titles[1])
x
x[3]
as.double(x[3])
x=list(3.4,"g")
x
x[1]
typeof(x[1])
as.double(x[1])
x=forecast_division(division_titles[1])
x[3]
unlist(x[3])
typeof(unlist(x[3]))
fit
forecast(fit)
paste("hi", "there")
call=source('predictors.R')
call
source('predictors.R')
x=forecast_division(division_titles[1])
dwtest(unlist(x[3]))
help(plot)
help(lines)
fcast
lines(fcast)
plot(fcast)
x
source('predictors.R')
x=forecast_division(division_titles[1])
x
source('predictors.R')
x=forecast_division(division_titles[1])
source('predictors.R')
source('predictors.R')
x=forecast_division(division_titles[1])
source('predictors.R')
x=forecast_division(division_titles[1])
fit
fcast
typeof(fcast)
fitted(fit)
typeof(fitted(fit))
plot(fcast)
lines(fcast)
source('predictors.R')
x=forecast_division(division_titles[1])
x
list(unlist(x[4]),unlist(x[3]))
list(x[4],x[3])
fcast
fitted(fit)
fcast[1,2]
fcast[1]
fcast
fcast+1
data.matrix(fcast)+1
data.matrix(fcast)
data.frame(fcast)
data.frame(fcast)+1
fit
fit2
x=c(summary(fit),summary(fit2))
x
x[1]
summary(fit)
summary(fit2)
x1=summary(fit)
x2=summary(fit2)
x1
x=c(x1,x2)
x
x=list(x1,x2)
x[1]
x=list()
length(x)=length(division_titles)
x
x[4]="2"
x
source('predictors.R')
forecast_all_divisions()
source('predictors.R')
forecast_all_divisions()
x=forecast_all_divisions()
x[1][1]
source('predictors.R')
x=forecast_all_divisions()
x[1][1]
source('predictors.R')
x=forecast_all_divisions()
warnigns()
warnings()
source('predictors.R')
x=forecast_all_divisions()
x[1][1][1]
typeof(x)
length(x)
length(x[1])
length(x[1][1])
length(x[1][1][1])
length(x[1][1][1][1])
length(x[1][1][1][1][1])
x[1][1][1][1][1]
forecast_division(division_titles(6))
forecast_division(division_titles[6]
)
x=forecast_division(division_titles[7])
x[1]
y=forecast_division(division_titles[8])
di=list(x[1],y[1])
di[1[]
di[1]
di=list(unlist(x[1]),unlist(y[1]))
di[1]
di=list(x[1],y[1])
source('predictors.R')
x=forecast_all_divisions()
typeof(x[1])
typeof(x[1][1])
typeof(x[1][1][1])
x[1]
source('predictors.R')
x=forecast_all_divisions()
x[1][1]
y=x[1]
y[1]
y=unlist(x[1])
y[1]
source('predictors.R')
x=forecast_all_divisions()
x[1]
source('predictors.R')
x=forecast_all_divisions()
y=unlist(x[1])
y
y[1]
y[2]
y[3]
x[1]
x[1][1]
source('predictors.R')
x=forecast_all_divisions()
di
x[2]
division_titles
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
paste("hi","there",sep="")
paste("hi","there")
source('predictors.R')
x=forecast_all_divisions()
gsub(".","_", "ACTION.INF.T"")
gsub(".","_", "ACTION.INF.T")
gsub("\.","_", "ACTION.INF.T")
gsub(".","_", "ACTION.INF.T")
gsub("A","_", "ACTION.INF.T")
gsub("..","_", "ACTION.INF.T")
gsub("...","_", "ACTION.INF.T")
gsub("\\.","_", "ACTION.INF.T")
source('predictors.R')
x=forecast_all_divisions()
help(png)
example(rect)
require(grDevices)
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
help(bitmap)
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
direc = file.path("C", "Users", "Nikos", "Desktop", "itim", "initial_forecasts",
paste(gsub("\\.","_", division_titles[3]), "_forecast.png",sep=""))
png(file=direc)
typeof(direc)
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
direc = file.path("C", "Users", "Nikos", "Desktop", "itim", "initial_forecasts",
paste(gsub("\\.","_", division), "_forecast.png",sep=""))
png(file=direc, type="cairo")
direc = file.path("C", "Users", "Nikos", "Desktop", "itim", "initial_forecasts",
paste(gsub("\\.","_", division_titles[5]), "_forecast.png",sep=""))
png(file=direc, type="cairo")
plot(c(1,2,3),c(2,4,6))
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
setwd('C:\\Users\\Nikos\\Desktop\\itim\\initial_forecasts')
source('predictors.R')
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('predictors.R')
x=forecast_all_divisions()
direc
direc = file.path("C", "Users", "Nikos", "Desktop", "itim", paste(gsub("\\.","_", division_titles[5]), "_forecast.png",sep=""))
png(file=direc, type="cairo")
plot(c(1,2,4),c(1,23,4))
graphics.off
graphics.off()
dev.off()
direc = file.path("C", "Users", "Nikos", "Desktop", "itim", paste(gsub("\\.","_", division_titles[5]), "_forecast.png",sep=""))
png(file=direc, type="cairo")
plot(c(1,2,4),c(1,23,4))
source('predictors.R')
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('predictors.R')
x=forecast_all_divisions()
setwd('C:\\Users\\Nikos\\Desktop\\itim')
direc = file.path("C", "Users", "Nikos", "Desktop", "itim",
paste(gsub("\\.","_", division_titles[17]), "_forecast.png",sep=""))
png(filename=direc)
plot(c(1,2,3),c(2,3,4))
dev.off()
plot(c(1,2,4),c(1,23,4))
plot(c(1,2,4),c(1,23,4))
graphics.off
graphics.off()
plot(c(1,2,4),c(1,23,4))
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('predictors.R')
x=forecast_all_divisions()
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('predictors.R')
x=forecast_all_divisions()
x=forecast_all_divisions()
png(filename="mypng.png", type="cairo")
plot(c(1,2,3),c(2,4,6))
dev.off()
png(filename="mypng.png", type="cairo")
plot(c(1,2,3),c(2,4,6))
dev.off()
png(filename="mypng.png", type="cairo")
plot(c(0,2,3),c(2,4,6))
dev.off()
png(filename="mypng.png", type="cairo")
plot(fit)
lines(fitted(fit))
dev.off()
plot(fit)
lines(fitted(fit))
graphics.off()
plot(fit)
lines(fitted(fit))
plot(fitted(fit))
lines(fit)
plot(fitted(fit))
lines(ts(fit)
)
graphics.off()
source('plots.R')
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('plots.R')
plot_all_divisions_timeseries()
division_titles
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('plots.R')
plot_all_divisions_timeseries()
graphics.off()
plot_all_divisions_timeseries()
png(filename="mypng1.png", type="cairo")
plot(c(0,2,3),c(2,4,6))
dev.off()
png(filename="mypng1.png", type="cairo")
plot(c(0,2,3),c(2,4,6))
dev.off()
png(filename="mypng2.png", type="cairo")
plot(c(0,2,3),c(2,4,6))
dev.off()
plot(fitted(fit), beer2, xy.lines=FALSE, xy.labels=FALSE,
xlab="Predicted values", ylab="Actual values",
main="Quarterly Beer Production")
abline(0, 1, col="gray")
plot(beer2, xlab="Year", ylab="", main="Quarterly Beer Production")
lines(fitted(fit), col=2)
legend("topright", lty=1, col=c(1,2), legend = c("Actual", "Predicted"))
plot(beer2, xlab="Year", ylab="", main="Quarterly Beer Production")
lines(fitted(fit), col=3)
legend("topright", lty=1, col=c(1,2), legend = c("Actual", "Predicted"))
γραπηιψσ.οφφ()
graphics.off()
plot(beer2, xlab="Year", ylab="", main="Quarterly Beer Production")
lines(fitted(fit), col="red")
legend("topright", lty=1, col=c(1,2), legend = c("Actual", "Predicted"))
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
source('predictors.R')
x=forecast_all_divisions()
sudo apt-get install libx11-dev libxt-dev
png("bla.png");plot(1:10);dev.off()
d=c("low","high","med")
for (i in d){
png(paste(i, ".png", sep=""));plot(1:10);dev.off()
}
d=c("low","high","med")
for (i in d){
png(file.path("C", "Users", "Nikos", "Desktop", "itim", "initial_forecasts",
paste(i, "_forecast.png",sep=""));plot(1:10);dev.off()
}
d=c("low","high","med")
for (i in d){
png(file.path("C", "Users", "Nikos", "Desktop", "itim", "initial_forecasts",
paste(i, "_forecast.png",sep="")));plot(1:10);dev.off()
}
setwd('C:\\Users\\Nikos\\Desktop\\itim\\initial_forecasts')
d=c("low","high","med")
for (i in d){
png(paste(i, "_forecast.png",sep=""));plot(1:10);dev.off()
}
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('predictors.R')
x=forecast_all_divisions()

library("fpp", lib.loc="~/R/win-library/3.2")
tute1 <- read.csv("C:/Users/Nikos/Desktop/tute1.csv")
View(tute1)
View(tute1)
tute1
head(tute1)
tail(tute1)
tute[,2]
tute1[,2]
tute1[,3]
tute1[,1]
tute1[,"Sales"]
tute1[,2]
tute1[2,]
tute1[1:10,3:4]
tute1[97:-1,3:4]
tute1[0:-1,3:4]
tute1[0:-2,3:4]
tute1[0,3:4]
tute1[0:1,3:4]
tute1[0:1,0]
tute1[0:5,0]
tute1[0:5,0:1]
tute1[-1:0,1]
tute1[1:10:2,1]
tute1[1:10,1]
head(tute1)
head(tute1)
tute[1:10,-1]
tute1[1:10,-1]
tute1[1:10,-2]
tute1[-2:-100,-2]
tute1[-3:-100,-2]
tute1[-3:100,-2]
tute1[-3:0,-2]
tute1 <- ts(tute1[,-1], start=1981, frequency=4)
tute2 <- read.csv("C:/Users/Nikos/Desktop/tute2.csv")
View(tute2)
tute1 <- ts(tute1[,-1:-2], start=1981, frequency=4)
tute1
View(tute2)
View(tute2)
View(tute2)
tute1 <- ts(tute2[,-1], start=1981, frequency=4)
tute1
seasonplot(tute1[,"Sales"])
seasonplot(tute1[,"AdBudget"])
seasonplot(tute1[,"GDP"])
monthplot(tute1[,"GDP"])
monthplot(tute1[,"AdBudget"])
plot(Sales ~ AdBudget, data=tute1)
plot(Sales ~ GDP, data=tute1)
pairs(as.data.frame(tute1))
pairs(tute1)
summary(tute1)
tute[,1]
tute1[,1]
max(tute1[,1])
median(tute1[,1])
hist(tute1[,"sales"])
hist(tute1[,"Sales"])
hist(tute1[,"AdBudget"])
boxplot(tute1[,"Sales"])
boxplot(as.data.frame(tute1))
hist(tute1[,"GDP"])
cor.test(tute1[,"Sales"],tute1[,"AdBudget"])
(100+2)/5
(100+2)/2
type(_)
type(51)
[1,2]
log100
log(100)
fpp
libray(fpp)
library(fpp)
plot(melsyd[,"Economy.Class"],
main="Economy class passengers: Melbourne-Sydney",
xlab="Year",ylab="Thousands")
melsyd
plot(dj2)
dj2
dj
plot(dj)
plot(dj[1:250])
plot(dj[,250])
plot(dj[250])
plot(dj, end=250)
naive(dj)
dj
naive(dj)
library(fma)
data(package="fma")
dole
dole1 <- ts(dole)
dole1
plot(dole)
plot(usdeaths)
plot(bricksq)
plot(BoxCox(usdeaths,0.5))
plot(BoxCox(bricksq,0.5))
plot(usdeaths)
plot(BoxCox(usdeaths,0.5))
plot(BoxCox(usdeaths,0.9))
plot(BoxCox(usdeaths,0.1))
library(fpp)
melsyd
melsyd[0,]
melsyd[0:1,]
melsyd[0:5,]
melsyd[0:5,0]
melsyd[0:5,5]
melsyd[0:5,3]
plot(melsyd[,"Economy.Class"],
main="Economy class passengers: Melbourne-Sydney",
xlab="Year",ylab="Thousands")
plot(melsyd[,"Economy.Class"],
main="Economy class passengers: Melbourne-Sydney",
xlab="Season",ylab="kilo")
melsyd[19:-1],3]
melsyd[19:-1,3]
melsyd[19:0,3]
initial_datasets <- read.csv2("C:/Users/Nikos/Desktop/itim/initial_datasets.xlsx", sep="", comment.char="#")
View(initial_datasets)
View(initial_datasets)
View(initial_datasets)
View(initial_datasets)
View(initial_datasets)
View(initial_datasets)
View(initial_datasets)
test1 <- read.csv("C:/Users/Nikos/Desktop/itim/test1.csv")
View(test1)
test1 <- read.csv("C:/Users/Nikos/Desktop/itim/test1.csv")
View(test1)
test1[4,]
plot(test1[4,])
plot(test1[4,])
test1[4,]
test1[4,"X.1":"X.105"]
test1[4,324:43740]
test1[4,3:]
test1[4,3:5]
test1[4,4:110]
test1[4,4:109]
test1[4,4:18]
test1[4,4:108]
try <- test1[4,4:108]
try
plot(try)
try <- test1[4,4:18]
plot(try)
try <- ts(test1[4,4:108], start=2014, frequency=52)
plot(try)
try <- ts(test1[4,4:108])
plot(try)
try
test1[4,4:108]
ts(test[4,4:108])
ts(test1[4,4:108])
tute1[,"Sales"]
library(tute1)
tute2 <- read.csv("C:/Users/Nikos/Desktop/tute2.csv")
View(tute2)
tute2[,"Sales"]
ts(tute2[,"Sales"])
try
try <- test1[4,4:108]
try
try <- test1[4,4:107]
try
try1 <- ts(try)
try1
try
try1 <- ts(try, start=1, end=104, frequency=1)
try1
try1 <- ts(try, start=1, frequency=52)
try1
plot(try1)
View(tute2)
tute2[,"Sales"]
tute2 <- ts(tute2[,"Sales"], start=1981, frequency=12)
tute2
plot(tute2)
test1 <- read.csv("C:/Users/Nikos/Desktop/itim/test1.csv")
View(test1)
test1[1,]
test[3,-3]
test1[3,-3]
test1[3,-1:-3]
test1[-1:-2,4]
test1[-1:-2:-5,4]
test1[-1:-2:-5:-6,4]
test1[c(-1:-2,-4):,4]
test1[c(1,3,5):,4]
test1[c(1:5):,4]
test1[c(-1:-2,-107:-108),4]
try <- ts(test1[c(-1:-2,-107:-108),4])
try
plot(try)
test1[c(-1:-2,-107:-108),4]
try <- ts(test1[c(-1:-2,-107:-108),4], start=2014, frequency=52)
try
plot(try, main=test1[1,4])
try[1]
data11 <- test1[c(-1:-2,-107:-108),4]
data11[1]
plot(data11)
try11 <- ts(data11, start=2014, frequency=52)
try11
try11[1]
tute2
typeof(data11)
tute2 <- read.csv("C:/Users/Nikos/Desktop/tute2.csv")
View(tute2)
datahelp=tute2[,"Sales"]
datahelp
typeof(datahelp)
datahelp1 <- ts(datahelp)
typeof(datahelp1)
datahelp1
test11
try
data11
typeof(data11)
tr11
try11
typeof(try11)
data11
data11[1]
as.double(data11[1])
typeof(as.double(data11[1]))
typeof(as.double(data11))
data11 <- as.double(data11)
data11
data11 <- test1[c(-1:-2,-107:-108),4]
data11
data11 <- as.double(test1[c(-1:-2,-107:-108),4])
data11
test1 <- read.csv("C:/Users/Nikos/Desktop/itim/test1.csv")
View(test1)
data11 <- test1[c(-1:-2,-107:-108),4]
typeof(data11)
try11 <- ts(data11, start=2014, frequency=52)
try11
data11
data11[1]
as.double(data11[1:6])
typeof(try11)
as.integer(try11)
as.double(try11)
as.integer(data11)
as.double(data11)
data11
x = data11[1]
x
x <- data11[1]
x-1
x
x*2
tute2
datahelp
datahelp[1]
datahelp[1]+1
View(tute2)
typeof(datahelp[1])
test1[3,4]
test1[3,4]+1
as.integer(test1[3,4])+1
as.integer(test1[4,4])+1
as.integer(test1[4,4])*2
test1 <- read.csv("C:/Users/Nikos/Desktop/itim/test1.csv")
View(test1)
data <- test1[c(-1,-2,-107,-108),4]
data
data[1]
data[1]+1
as.integer(data[1])
as.integer(data[1])+1
as.double(data[1])
data
max(data)
data.matrix(data)
hey <- data.matrix(data)
hey[1]
hey[1]+1
as.integer(hey[1])+1
data <- as.integer(data.matrix(data))
data
try <- ts(data, start=2014, frequency=52)
try
plot(try, main=test1[1,4])
setwd('C:\\Users\\Nikos\\Desktop\\itim')
source('text1v1.R')
source('test1v1.R')
divisions
departments
create_timeseries(departments[4[])
create_timeseries(departments[4])
x=create_timeseries(departments[4])
x
divisions
div_to_deps(divisions[2])
ts_plot_dep(departments[5])
ts_plot_dep(departments[6])
ts_plot_deps(division[3])
ts_plot_deps(divisions[3])
ts_plot_div(divisions[3])
source('test1v1.R')
ts_plot_div(divisions[3])
ts_plot_div(divisions[5],cout=TRUE)
source('test1v1.R')
season_plot_deps(divisions[6])
source('test1v1.R')
season_plot_deps(divisions[6])
season_plot_dep(departments[5])
season_plot_deps(divisions[6])
season_plot_deps(divisions[5])
divisions
season_plot_div(divisions[5])
source('test1v1.R')
season_plot_div(divisions[5])
ts_plot_div(divisions[5])
x=stats_dep(departments[34])
x
x$avg
x$avg-1
x$data-1
x=stats_dep(divisions[3])
x
divisions[3]
departments
x=stats_dep(departments[23])
x
source('test1v1.R')
stats_div(divisions[3])
deps = div_to_deps(divisions[3])
deps
for (dep in deps){
stats_dep(dep)
}
stats_dep(deps[1])$data+stats_dep(deps[2])$data+stats_dep(deps[3])$data+stats_dep(deps[4])$data
x=stats_dep(departments[23])
sum(x$data)
x$data
sqrt(2)
2^2
x$data^2
sqrt(93896100)
(x$data+x$data)^2
sqrt(375584400)
_/2
19380/2
source('test1v1.R')
x=stats_div(divisions[6])
x$znormal
divisions[6]
x=stats_div(divisions[1])
divisions[1]
x$znormal
profile_div(divisions[1])
x2=profile_div(divisions[1])
x2$ACTION.CONCEPTS.2
help(adf)
help(adf.test)
data=create_timeseries(divisions[1])
stats_div(divisions[3])
source('test1v1.R')
stats_div(divisions[3])
source('test1v1.R')
stats_div(divisions[3])
adf.test(data, "stationary")
library(tseries)
adf.test(data, "stationary")
adf.test(c(1,2,3,4), "stationary")
ts(c(1,2,3,4,5,6),start=1, frequency=3)
data2=ts(c(1,2,3,4,5,6),start=1, frequency=3)
adf.test(data2, "stationary")
data2=ts(c(1,2,3,4,5,6.1),start=1, frequency=3)
adf.test(data2, "stationary")
help(diffinv)
adf.test(data2, "stationary")$p.value
adf.test(data, "stationary")$p.value
source('test1v1.R')
departments
source('test1v1.R')
stationarity_test()
source('test1v1.R')
stationarity_test()
help("kpss.test")
source('test1v1.R')
stationarity_test()
x3=stationarity_test()
x3
source('test1v1.R')
x3=stationarity_test()
x3
warnings()
source('test1v1.R')
stationarity_test()
help(inherits)
source('test1v1.R')
stationarity_test()
try(1.0)
try(1/0)
a
try(a)
try(a)=="try-error"
try(a,,TRUE)
try(a,TRUE)
try(a)
try(a)=="Error in try(a) : object 'a' not found"
try(log(-1))
help(try)
try(a)
geterrmessage()
try(a)==geterrmessage()
try(1)==geterrmessage()
source('test1v1.R')
stationarity_test()
warnings()
adf.test(create_timeseries("OUTDOOR.2"),"stationary")
try(adf.test(create_timeseries("OUTDOOR.2"),"stationary"))==geterrmessage()
source('test1v1.R')
source('test1v1.R')
yo=profile_divs()
warnings()
yo=profile_div(divisions[2])
yo=profile_div(divisions[3])
yo1=profile_div(divisions[4])
yo1=profile_div(divisions[5])
cra=list()
cra[yo]=yo
cra["yo"]=yo
cra["yo"]=yo$CONSTRUCTION
cra$yo=yo
cra$yo$CONSTRUCTION
source('test1v1.R')
profile_divs()
yo=profile_divs()
source('test1v1.R')
yo=profile_divs()
source('test1v1.R')
yo=profile_divs()
source('test1v1.R')
yo=profile_divs()
yo
yo1
yo2=profile_div(divisions[7])
yo2
cra=list()
length(yo1)
for (dep in c(yo1,yo2)){}
for (dep in c(yo1,yo2)){
print('hi')
}
for (dep in list(yo1,yo2)){
print('hi')
}
for (dep in list(yo1,yo2)){
cra[dep]=dep
}
profile_div(divisions[5])
profile_div(divisions[6])
yo=profile_divs()
yo
source('test1v1.R')
yo=profile_divs()
divisions
source('test1v1.R')
divisions
departments[1]
departments[2]
source('test1v1.R')
divisions
source('test1v1.R')
divisions
yo=profile_divs()
yo$BATTERY
warnings()
source('test1v1.R')
yo=profile_divs()
source('test1v1.R')
yo=profile_divs()
source('test1v1.R')
yo=profile_divs()
yolo=profile_div(divisions[1])
yolo
source('test1v1.R')
yo=profile_divs()
yo
season_plot_deps(divisions[4])
